"""add targets table

Revision ID: d3935560e630
Revises: 7c382ed7bf2e
Create Date: 2025-03-09 21:36:08.393433

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd3935560e630'
down_revision = '7c382ed7bf2e'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('targets', sa.Column('year', sa.Integer(), nullable=False))
    op.add_column('targets', sa.Column('month', sa.Integer(), nullable=False))
    op.add_column('targets', sa.Column('installation_type_id', sa.Integer(), nullable=False))
    op.add_column('targets', sa.Column('target_count', sa.Integer(), nullable=False))
    op.add_column('targets', sa.Column('target_days', sa.Integer(), nullable=True, comment='Target days to complete installation'))
    op.add_column('targets', sa.Column('description', sa.String(), nullable=True))
    op.add_column('targets', sa.Column('created_by', sa.Integer(), nullable=False))
    op.alter_column('targets', 'branch_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('targets', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Date(),
               nullable=True)
    op.alter_column('targets', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Date(),
               existing_nullable=True)
    op.drop_index('ix_targets_branch_id', table_name='targets')
    op.drop_index('ix_targets_year_month', table_name='targets')
    op.drop_constraint('uix_target_year_month_branch', 'targets', type_='unique')
    op.create_unique_constraint('unique_target', 'targets', ['year', 'month', 'branch_id', 'installation_type_id'])
    op.create_foreign_key(None, 'targets', 'users', ['created_by'], ['id'])
    op.create_foreign_key(None, 'targets', 'installation_types', ['installation_type_id'], ['id'])
    op.drop_column('targets', 'new_customers_count')
    op.drop_column('targets', 'cumulative_target')
    op.drop_column('targets', 'monthly_target')
    op.drop_column('targets', 'year_month')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('targets', sa.Column('year_month', sa.VARCHAR(length=6), autoincrement=False, nullable=False))
    op.add_column('targets', sa.Column('monthly_target', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('targets', sa.Column('cumulative_target', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('targets', sa.Column('new_customers_count', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'targets', type_='foreignkey')
    op.drop_constraint(None, 'targets', type_='foreignkey')
    op.drop_constraint('unique_target', 'targets', type_='unique')
    op.create_unique_constraint('uix_target_year_month_branch', 'targets', ['year_month', 'branch_id'])
    op.create_index('ix_targets_year_month', 'targets', ['year_month'], unique=False)
    op.create_index('ix_targets_branch_id', 'targets', ['branch_id'], unique=False)
    op.alter_column('targets', 'updated_at',
               existing_type=sa.Date(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('targets', 'created_at',
               existing_type=sa.Date(),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('targets', 'branch_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('targets', 'created_by')
    op.drop_column('targets', 'description')
    op.drop_column('targets', 'target_days')
    op.drop_column('targets', 'target_count')
    op.drop_column('targets', 'installation_type_id')
    op.drop_column('targets', 'month')
    op.drop_column('targets', 'year')
    # ### end Alembic commands ### 